{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        var lastBar = this.element.querySelector('.e-last-bar');\n        var sepSize = parseInt(isNullOrUndefined(this.separatorSize) ? '1' : this.separatorSize.toString(), 10);\n        if (this.orientation === 'Horizontal') {\n            if ((lastBar.offsetLeft + sepSize + this.element.offsetLeft) > (this.element.offsetWidth + this.element.offsetLeft)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n        else {\n            if ((lastBar.offsetTop + sepSize + this.element.offsetTop) > (this.element.offsetHeight + this.element.offsetTop)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n    };\n    Splitter.prototype.validatelastBar = function (lastBar, sepSize) {\n        var lastbarIndex = this.getSeparatorIndex(lastBar);\n        if (this.allPanes[lastbarIndex + 1].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = this.convertPixelToPercentage(sepSize) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = parseFloat(this.allPanes[lastbarIndex + 1].style.flexBasis)\n                + sepSize + 'px';\n        }\n        if (this.allPanes[lastbarIndex].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex].style.flexBasis = (parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - this.convertPixelToPercentage(this.separatorSize)) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex].style.flexBasis = parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - sepSize + 'px';\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","event","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getSeparatorIndex","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","lastBar","offsetLeft","validatelastBar","offsetTop","lastbarIndex","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues"],"mappings":"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"}