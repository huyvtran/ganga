{"version":3,"file":"ej2-layouts.min.js","sources":["../../src/splitter/splitter.js","../../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile, isBlazor } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     * @param  {SplitterModel} newProp\n     * @param  {SplitterModel} oldProp\n     * @returns void\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings':\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content':\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    case 'resizable':\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed() : this.collapsedOnchange(index);\n                                        break;\n                                    case 'size':\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.allPanes[index].style.flexBasis = newValSize;\n                                            this.allPanes[index].classList.add(STATIC_PANE);\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.preRender = function () {\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        this.isCollapsed();\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // tslint:disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // tslint:disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // tslint:disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) { detach(el); });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (className) {\n        if (className) {\n            addClass([this.element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex;\n        var i = index;\n        paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var arrow2;\n        var arrow1;\n        var paneIndex;\n        paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        arrow2 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        arrow1 = (this.orientation === 'Horizontal') ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        if (!isNullOrUndefined(index)) {\n            this.updateIsCollapsed(index, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return { collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var seaprator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + seaprator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains('e-pane')) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, ((order - 1) / (2)));\n    };\n    Splitter.prototype.getNextPane = function (currentBar, order) {\n        return this.checkSplitPane(currentBar, (((order - 1) / 2) + 1));\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        var size;\n        size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (this.isResizable()) {\n                    EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                    var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                    EventHandler.add(separator, eventName, this.onMouseDown, this);\n                    separator.classList.add(RESIZABLE_BAR);\n                    this.updateResizablePanes(i);\n                }\n                else {\n                    addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () { addClass([separator], [SPLIT_BAR_HOVER]); }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return ((target.classList.contains(RESIZE_BAR) || target.classList.contains(SPLIT_BAR)) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var paneCount = this.allPanes.length;\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        window.addEventListener('resize', this.reportWindowSize.bind(this));\n        EventHandler.add(document, 'mousemove', this.onMouseMove, this);\n        EventHandler.add(document, 'mouseup', this.onMouseUp, this);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.add(document, touchMoveEvent, this.onMouseMove, this);\n        EventHandler.add(document, touchEndEvent, this.onMouseUp, this);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        window.removeEventListener('resize', this.reportWindowSize.bind(this));\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        EventHandler.remove(document, 'mousemove', this.onMouseMove);\n        EventHandler.remove(document, 'mouseup', this.onMouseUp);\n        EventHandler.remove(document, touchMoveEvent, this.onMouseMove);\n        EventHandler.remove(document, touchEndEvent, this.onMouseUp);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n            if (!beforeExpandArgs.cancel) {\n                _this.nextPane.style.flexGrow = '0';\n                if (_this.previousPane.classList.contains('e-collapsed') && _this.previousPane.style.flexGrow === '0') {\n                    _this.previousPane.style.flexGrow = '0';\n                }\n                else {\n                    _this.previousPane.style.flexGrow = '1';\n                }\n                if (!_this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                    removeClass([_this.previousPane], collapseClass);\n                    addClass([_this.previousPane], EXPAND_PANE);\n                    addClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    (_this.currentBarIndex !== 0) ?\n                        _this.previousPane.style.flexGrow = '' : _this.nextPane.style.flexGrow = '';\n                    removeClass([_this.previousPane], collapseClass);\n                    removeClass([_this.nextPane], EXPAND_PANE);\n                }\n                _this.updateIconsOnExpand(e);\n                _this.previousPane.setAttribute('aria-expanded', 'true');\n                _this.nextPane.setAttribute('aria-expanded', 'false');\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            this.resizableModel(this.currentBarIndex, true);\n            if (!this.splitInstance.nextPaneNextEle.classList.contains('e-collapsed')) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains('e-collapsed') &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        this.previousPane.style.flexGrow = '0';\n        this.nextPane.style.flexGrow = '1';\n        var eventArgs = this.beforeAction(e);\n        this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n            if (!beforeCollapseArgs.cancel) {\n                if (_this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                }\n                else {\n                    removeClass([_this.previousPane], EXPAND_PANE);\n                    removeClass([_this.nextPane], collapseClass);\n                    addClass([_this.nextPane], EXPAND_PANE);\n                    addClass([_this.previousPane], collapseClass);\n                }\n                _this.updateIconsOnCollapse(e);\n                _this.previousPane.setAttribute('aria-expanded', 'false');\n                _this.nextPane.setAttribute('aria-expanded', 'true');\n                var collapseEventArgs = _this.afterAction(e);\n                _this.trigger('collapsed', collapseEventArgs);\n            }\n        });\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling,\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            this.resizableModel(this.currentBarIndex, true);\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                this.resizableModel(this.currentBarIndex - 1, true);\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getSeparatorIndex(e.target.parentElement);\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                if (_this.previousPane.style.flexBasis.indexOf('%') > 0 || _this.nextPane.style.flexBasis.indexOf('%') > 0) {\n                    var previousFlexBasis = _this.updatePaneFlexBasis(_this.previousPane);\n                    var nextFlexBasis = _this.updatePaneFlexBasis(_this.nextPane);\n                    _this.totalPercent = previousFlexBasis + nextFlexBasis;\n                    _this.totalWidth = _this.convertPercentageToPixel(_this.totalPercent + '%');\n                }\n                else {\n                    _this.totalWidth = (_this.orientation === 'Horizontal') ? _this.previousPane.offsetWidth + _this.nextPane.offsetWidth :\n                        _this.previousPane.offsetHeight + _this.nextPane.offsetHeight;\n                }\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth + this.currentSeparator.offsetWidth) :\n                    (pane.offsetHeight + this.currentSeparator.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition;\n        var separator;\n        separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // tslint:disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var prePaneIndex = ((parseInt(this.currentSeparator.style.order, 10) - 1) / 2);\n        return prePaneIndex;\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var nextPaneIndex = (parseInt(this.currentSeparator.style.order, 10) - 1) / (2);\n        return nextPaneIndex + 1;\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.currentSeparator, this.order);\n            nextPane = this.getNextPane(this.currentSeparator, this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        var eventArgs = isBlazor() ? {\n            element: this.element,\n            event: e,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        } : {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        var lastBar = this.element.querySelector('.e-last-bar');\n        var sepSize = parseInt(isNullOrUndefined(this.separatorSize) ? '1' : this.separatorSize.toString(), 10);\n        if (this.orientation === 'Horizontal') {\n            if ((lastBar.offsetLeft + sepSize + this.element.offsetLeft) > (this.element.offsetWidth + this.element.offsetLeft)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n        else {\n            if ((lastBar.offsetTop + sepSize + this.element.offsetTop) > (this.element.offsetHeight + this.element.offsetTop)) {\n                this.validatelastBar(lastBar, sepSize);\n            }\n        }\n    };\n    Splitter.prototype.validatelastBar = function (lastBar, sepSize) {\n        var lastbarIndex = this.getSeparatorIndex(lastBar);\n        if (this.allPanes[lastbarIndex + 1].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = this.convertPixelToPercentage(sepSize) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex + 1].style.flexBasis = parseFloat(this.allPanes[lastbarIndex + 1].style.flexBasis)\n                + sepSize + 'px';\n        }\n        if (this.allPanes[lastbarIndex].style.flexBasis.indexOf('%') > -1) {\n            this.allPanes[lastbarIndex].style.flexBasis = (parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - this.convertPixelToPercentage(this.separatorSize)) + '%';\n        }\n        else {\n            this.allPanes[lastbarIndex].style.flexBasis = parseFloat(this.allPanes[lastbarIndex].style.flexBasis)\n                - sepSize + 'px';\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = isBlazor() ? {\n            event: e,\n            element: this.element,\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        } : {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        this.trigger('resizeStop', eventArgs);\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        this.templateCompile(toElement, template);\n    };\n    // tslint:disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && cnt.indexOf('<div>Blazor') === 0) {\n                updateBlazorTemplate(this.element.id + 'content' + this.allPanes.length.toString(), 'ContentTemplate', this.paneSettings[this.allPanes.length - 1]);\n            }\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            if (blazorContain.indexOf('ejsInterop') !== -1 && !this.isStringTemplate && val.indexOf('<div>Blazor') === 0) {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), this.isStringTemplate);\n            }\n            else {\n                templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n            }\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 1) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    ;\n    /**\n     * expands corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns void\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     * @returns void\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var panes = document.querySelectorAll('.' + paneClass);\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns void\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns void\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, isBlazor } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar resize = 'e-resize';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass) {\n            addClass([ele], [cssClass]);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                Math.floor((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && Math.floor((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass) {\n            addClass([element], [cssClass]);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        for (var _i = 0, _a = templateFn({}, null, null, type, isStringTemplate); _i < _a.length; _i++) {\n            var item = _a[_i];\n            templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(panelModel.cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement('', cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate);\n                this.panelContent.appendChild(headerTemplateElement);\n                updateBlazorTemplate(id, 'HeaderTemplate', panelModel);\n            }\n        }\n        if (panelModel.content) {\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(panelModel.cssClass, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate);\n                this.panelContent.appendChild(this.panelBody);\n                updateBlazorTemplate(id, 'ContentTemplate', panelModel);\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content',\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', model);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        window.addEventListener('resize', this.refresh.bind(this));\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    ;\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.elementX = parseInt(el.style.left, 10);\n        this.elementY = parseInt(el.style.top, 10);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [parseInt((this.cellSize[0]), 10), parseInt(this.cellSize[1], 10)];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + this.elementHeight + dY > this.maxTop) {\n                currentY = this.maxTop - this.elementY - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + this.elementWidth + dX > this.maxLeft) {\n                currentX = this.maxLeft - this.elementX - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel, this.moveTarget);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'mise') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item, e) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    ;\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    ;\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    ;\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue, ignoreItems) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    ;\n    DashboardLayout.prototype.refresh = function () {\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel = this.sortPanels();\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + (this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) + 'px';\n                this.cellSize[1] = this.element.parentElement\n                    && (this.element.parentElement.offsetWidth / this.cellAspectRatio);\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && Math.floor((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate) {\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        var cellElement = this.createPanelElement(panel.cssClass, panel.id);\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // tslint:disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    ;\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'right');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element, type) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = 0; i <= col; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele, 'left');\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement, 'left');\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var leftSpacing;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (sizeY > 1 ? rowValue === endRow - sizeY - 1 : rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0) {\n                            collisionItems.splice(collisionItems.indexOf(item), 1);\n                        }\n                    });\n                }\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model, element) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element_1 = document.getElementById(this.panels[i].id);\n                if (element_1 === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element_1.id].row;\n                var colValue = this.cloneObject[element_1.id].col;\n                this.setPanelPosition(element_1, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element_1.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element_1);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = void 0;\n                collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element, panelModel) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY) {\n                ignore.push(collisions[count]);\n            }\n            var swapCollision = void 0;\n            swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + 1 });\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel, element);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element, panelModel) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString(),\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = void 0;\n                    collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [draggable]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        for (var j = 0; j < this.availableClasses.length; j++) {\n            var spanEle = this.createElement('span');\n            var addClassValue = void 0;\n            container.appendChild(spanEle);\n            if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                addClassValue = single;\n            }\n            else {\n                addClassValue = double;\n            }\n            addClass([spanEle], [addClassValue, this.availableClasses[j], resize]);\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString(),\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseInt(args.element.style.top, 10);\n        var elementLeft = parseInt(args.element.style.left, 10);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: '.e-resize',\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        var changedPanels = [];\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        for (var i_3 = 0; i_3 < _this.panels.length; i_3++) {\n                            if (_this.panels[i_3].row !== _this.panelsInitialModel[i_3].row ||\n                                _this.panels[i_3].col !== _this.panelsInitialModel[i_3].col) {\n                                changedPanels.push(_this.panels[i_3]);\n                            }\n                        }\n                        if (changedPanels.length > 0) {\n                            var changedArgs = { changedPanels: changedPanels };\n                            _this.trigger('change', changedArgs);\n                        }\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    ;\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // tslint:disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n            if (isBlazor()) {\n                dragArgs.bindEvents(args.element);\n            }\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    ;\n    // tslint:disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // tslint:disable-next-line\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    ;\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    ;\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var cellSizeOne;\n        var cellSizeZero;\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (parseInt(heightValue.toString(), 10) + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (parseInt(widthValue.toString(), 10) + this.cellSpacing[0])));\n        cellSizeOne = this.getCellSize()[1];\n        cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    ;\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     * @param {panel: [`PanelModel`](./panelModel)} panel -  Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // tslint:disable-next-line\n        var panelProp = new Panel(this, 'panels', panel);\n        this.panels.push(panelProp);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        var container = cell.querySelector('.e-panel-container');\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.addPanelCalled = true;\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n            this.addPanelCalled = false;\n        }\n        if (this.allowResizing &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.setResizingClass(cell, container);\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'mise') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     * @param {panel: [`panelModel`](./panelModel)} panel - Defines the panel element.\n     * @returns void\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(panelInstance.cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement('', cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true);\n            this.panelContent.appendChild(headerTemplateElement);\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(panelInstance.cssClass, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true);\n            this.panelContent.appendChild(this.panelBody);\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     * @param {id: string} id -  Defines the panel ID.\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                this.panels.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n    };\n    /**\n     * Moves the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {row: number} row - Defines the row of dashboard layout.\n     * @param {col: number} col - Defines the column of dashboard layout.\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        var panelInstance = this.getCellInstance(id);\n        if (col < 1) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - 1;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.movePanelCalled = false;\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     * @param {id: string} id - Defines the panel ID.\n     * @param {sizeX: number} sizeX - Defines the sizeX of dashboard layout.\n     * @param {sizeY: number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n    };\n    /**\n     * Destroys the DashboardLayout component\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        if (this.table) {\n            this.table.remove();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        this.panelCollection.forEach(function (item) {\n            item.remove();\n        });\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        this.enableRtl ? addClass([this.element], 'e-rtl') : removeClass([this.element], 'e-rtl');\n    };\n    DashboardLayout.prototype.getDragInstance = function (id) {\n        var draggableInstance;\n        var ele = document.getElementById(id);\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            draggableInstance = this.dragCollection[i].element === ele ? this.dragCollection[i] : null;\n            if (draggableInstance) {\n                return draggableInstance;\n            }\n        }\n        return draggableInstance;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels)) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.checkDragging(this.dragCollection);\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'mise') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                        var ele = this.element.querySelectorAll('.e-panel')[i];\n                        var draggableInstance = this.getDragInstance(ele.id);\n                        draggableInstance.handle = this.draggableHandle;\n                    }\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     * @returns string\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Returns the current module name.\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","PANE","SPLIT_H_PANE","SPLIT_V_PANE","STATIC_PANE","RESIZE_BAR","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","style","flexBasis","add","preRender","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","EventHandler","document","onDocumentClick","renderComplete","e","currentSeparator","remove","api","value","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","size","min","max","content","resizable","collapsible","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","indexOf","hideResizer","select","showResizer","previousPane","nextPane","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","targetEle","splitterProperty","sizeValue","seaprator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getNextPane","addResizeHandler","resizeHanlder","createElement","appendChild","createSeparator","separator","leftArrow","rightArrow","addMouseActions","getPaneDetails","clonedEle","parentNode","setAttribute","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","addEventListener","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","type","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","reportWindowSize","paneCount","wireResizeEvents","window","bind","onMouseMove","onMouseUp","touchMoveEvent","touchEndEvent","unwireResizeEvents","removeEventListener","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","collapseClass","eventArgs","beforeAction","trigger","beforeExpandArgs","cancel","flexGrow","currentBarIndex","updateIconsOnExpand","expandEventArgs","afterAction","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","prevPaneIndex","showCurrentBarIcon","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","nextPaneIndex","getPrevBar","nextBar","nextElementSibling","beforeCollapseArgs","collapseEventArgs","isBlazor","event","pane","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","getSeparatorIndex","getNextBar","updateBars","preventDefault","resizeStartArgs","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","offsetWidth","offsetHeight","previous","removePercentageUnit","convertPixelToPercentage","convertPixelToNumber","offset","parseFloat","targetElement","convertedValue","percentage","toString","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","top","offSet","getMinMax","selection","defaultVal","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","prePaneDimenson","nextPaneDimension","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","paneSize","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","addStaticPaneClass","lastBar","offsetLeft","validatelastBar","offsetTop","lastbarIndex","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","paneMinRange","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","ele","cnt","blazorContain","tempEle","compileElement","childEle","isStringTemplate","updateBlazorTemplate","id","val","prop","eleVal","display","removeProperty","removeAttribute","trim","templateFn","outerHTML","compile","templateFUN","childElement","nodeName","expand","collapse","destroy","isDestroyed","attributes","refreshing","body","addPaneClass","removePaneOrders","paneClass","panes","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","floor","cellAspectRatio","cellSpacing","recheck","updateOldRowColumn","getElementById","createSubElement","templateParser","error","renderTemplate","appendElement","templateElements","item","append","cellElement","panelModel","panelId","panelContent","disablePanel","header","headerTemplateElement","panelBody","contentHeightValue","getComputedStyle","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","moveResizeHandler","isMouseUpBound","upResizeHandler","closest","args","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","ignoreItems","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","this_1","filter","panel","updatedPanel","updatedRows","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","sort","next","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","leftSpacing","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","this_2","updatedModels","adjust","resetLayout","addPanelCalled","cloneObject","element_1","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","this_3","rowVal","colValue_1","collisionModels1","proxy","resizerElements","i_2","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","collections","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","changedPanels","panelInstance","i_3","panelsInitialModel","changedArgs","dragStopEventArgs","drag","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","cloneModels","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","serialize","cloneModel","customObject","removeAll","removeAllPanel","removePanel","movePanel","resizePanel","getDragInstance","draggableInstance","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","keyEntity"],"mappings":"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"}