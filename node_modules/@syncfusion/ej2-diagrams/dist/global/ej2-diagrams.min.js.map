{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n            checkParentAsContainer(diagram, object))\n            || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content,\n                style: shape.header.annotation.style ? shape.header.annotation.style : undefined,\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270,\n                style: shape.phases[phaseIndex].header.annotation.style\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [\n                    {\n                        id: shape.lanes[laneIndex].header.annotation.id,\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0,\n                        style: shape.lanes[laneIndex].header.annotation.style,\n                    }\n                ],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if (shape.phaseSize === 0 && targetIndex === 0) {\n                        if (shape.header && shape.hasHeader) {\n                            grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if (navigator.platform.indexOf('Mac') >= 0 && Browser.info.name === 'safari') {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: 'transparent' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.visible = obj.visible;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                            var swimlane = this.diagram.getObject(parentNode.parentId);\n                            var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                            var firstlane = this.diagram.getObject(laneId);\n                            var x = firstlane.wrapper.bounds.x;\n                            var y = firstlane.wrapper.bounds.y;\n                            var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                            var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                            var swimlaneBounds = new Rect(x, y, width, height);\n                            if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                obj.width = helperObject.width;\n                                obj.height = helperObject.height;\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                        else {\n                            obj.offsetX = helperObject.offsetX;\n                            obj.offsetY = helperObject.offsetY;\n                            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                if (obj.shape.type !== 'Bpmn' ||\n                                    (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                }\n                            }\n                            obj.rotateAngle = helperObject.rotateAngle;\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var lane = findLane(node, this.diagram);\n                    childTable[node.id] = cloneObject(lane);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                if (newObj) {\n                    select = true;\n                    if (!hasSelection(this.diagram)) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                    else {\n                        if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                            for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                if (parentNode) {\n                                    parentNode = this.findParent(parentNode);\n                                    if (parentNode) {\n                                        if (newObj.id === parentNode.id) {\n                                            this.selectGroup(newObj);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        this.selectProcesses(newObj);\n                        select = this.selectBpmnSubProcesses(newObj);\n                        if (select) {\n                            this.select(newObj, i > 0 || multipleSelection, true);\n                        }\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.PreventZIndexOnDragging;\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventZIndexOnDragging;\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'chart_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    Diagram.prototype.resetSegments = function () {\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        if (!this.parent.checkMenu &&\n            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n            this.parent.checkMenu = args.cancel = true;\n        }\n        if (this.parent.checkMenu) {\n            this.hiddenItems = [];\n        }\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'] - this.size;\n        var top = diagram.spatialSearch['pageTop'] - this.size;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    grid_1.nodeId = [];\n                    grid_1.walkable = true;\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","isBlazor","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","callback","imageElement","createElement","setAttributeHtml","onload","event","loadedImage","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Port","Complex","Connect","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","diagramid","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","resetSegments","updateEventValue","addNodeToLane","hideTooltip","addNode","addConnector","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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"}