{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/utility/connector.js","../src/diagram/objects/tooltip.js","../src/diagram/objects/connector.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/constraints-util.js","../src/diagram/objects/dictionary/umlactivity-shapes.js","../src/diagram/interaction/container-interaction.js","../src/diagram/utility/swim-lane-util.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/uml-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/core/appearance.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/core/elements/html-element.js","../src/ruler/ruler.js","../src/diagram/interaction/selector.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/core/containers/grid.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/objects/node.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-mapping.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/serialization-settings.js","../src/diagram/diagram/custom-cursor.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/interaction/line-routing.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n            checkParentAsContainer(diagram, object))\n            || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content,\n                style: shape.header.annotation.style ? shape.header.annotation.style : undefined,\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270,\n                style: shape.phases[phaseIndex].header.annotation.style\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [\n                    {\n                        id: shape.lanes[laneIndex].header.annotation.id,\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0,\n                        style: shape.lanes[laneIndex].header.annotation.style,\n                    }\n                ],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if (shape.phaseSize === 0 && targetIndex === 0) {\n                        if (shape.header && shape.hasHeader) {\n                            grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if (navigator.platform.indexOf('Mac') >= 0 && Browser.info.name === 'safari') {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: 'transparent' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.visible = obj.visible;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                            var swimlane = this.diagram.getObject(parentNode.parentId);\n                            var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                            var firstlane = this.diagram.getObject(laneId);\n                            var x = firstlane.wrapper.bounds.x;\n                            var y = firstlane.wrapper.bounds.y;\n                            var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                            var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                            var swimlaneBounds = new Rect(x, y, width, height);\n                            if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                obj.width = helperObject.width;\n                                obj.height = helperObject.height;\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                        else {\n                            obj.offsetX = helperObject.offsetX;\n                            obj.offsetY = helperObject.offsetY;\n                            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                if (obj.shape.type !== 'Bpmn' ||\n                                    (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                }\n                            }\n                            obj.rotateAngle = helperObject.rotateAngle;\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var lane = findLane(node, this.diagram);\n                    childTable[node.id] = cloneObject(lane);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                if (newObj) {\n                    select = true;\n                    if (!hasSelection(this.diagram)) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                    else {\n                        if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                            for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                if (parentNode) {\n                                    parentNode = this.findParent(parentNode);\n                                    if (parentNode) {\n                                        if (newObj.id === parentNode.id) {\n                                            this.selectGroup(newObj);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        this.selectProcesses(newObj);\n                        select = this.selectBpmnSubProcesses(newObj);\n                        if (select) {\n                            this.select(newObj, i > 0 || multipleSelection, true);\n                        }\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.PreventZIndexOnDragging;\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventZIndexOnDragging;\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'chart_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    Diagram.prototype.resetSegments = function () {\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        if (!this.parent.checkMenu &&\n            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n            this.parent.checkMenu = args.cancel = true;\n        }\n        if (this.parent.checkMenu) {\n            this.hiddenItems = [];\n        }\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'] - this.size;\n        var top = diagram.spatialSearch['pageTop'] - this.size;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    grid_1.nodeId = [];\n                    grid_1.walkable = true;\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","id","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","connector","sourceSegment","createSegmentsCollection","sourcePadding","targetSegment","targetPadding","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","addPaddingToConnector","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","actualSegment","actualLastPoint","distancePoints","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","thisSegment","getIntersectionPoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","Draw","canDrag","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","LineRouting","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","columnDefinitions","rowDefinitions","canvas","laneHeader","Canvas","childNode","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","totalHeight","phaseHeight","phaseOffset","initGridRow","cols","k","totalWidth","createColumn","initGridColumns","setDefinitions","annotations","annotation","addObjectToGrid","addObject","headerDefine","randomId","phaseDefine","laneCollection","isPhase","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","ReadOnly","RowDefinition","ColumnDefinition","getConnectors","isRowUpdate","edges","conn","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","findStartLaneIndex","updateChildOuterBounds","checkLaneChildrenOffset","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","state","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addLastPhase","phaseObj","Phase","fristRow","i_2","nextCell","prevCell","addSwimlanePhases","addHorizontalPhase","nextPhaseNode","prevRow","addVerticalPhase","desiredCellWidth","desiredCellHeight","changeCell","zIndex","arrangeChildInGrid","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","deleteNode","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","findPhaseIndex","phaseLength","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","removeHorizontalPhase","prevChild","phaseRowIndex","prevHeight","removeVerticalPhase","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","bezierPoint1","bezierPoint2","pointsForBezier","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","serialize","removeNodes","getSwimLaneChildren","clonedObject","getCustomProperty","serializationSettings","preventDefaults","removeUnnecessaryNodes","JSON","stringify","defaultObject","isNodeShape","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","SwimLane","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","getConstructor","properties","properties_1","every","isSameArray","preventArrayDefaults","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateGradient","gradient","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","getCollectionChangeEventArguements","args1","isBlazor","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","getClassNodes","methods","argumentText","methodText","method","parameters","getClassMembers","borderColor","stack","lineObject","newStyle","getChildNode","childNodes","nodeType","measurePath","measureElement","window","setAttribute","getBBox","svgBounds","wrapSvgText","textValue","laneWidth","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","updatePath","bBox","newPathString","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","diagramLayerSvg","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compile","compiledString","cloneNode","svg","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","setAttributeNS","measureElementCount","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","connectorEditingToolModule","allowDrag","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkResizeHandleForContainer","checkForResizeHandles","checkResizeHandles","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","contextMenuClick","contextMenuOpen","contextMenuBeforeItemRender","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","callback","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","absoluteBounds","pointTimer","setTimeout","sample","sampleLength","pathNode","pathLength","getTotalLength","getPointAtLength","findSegmentPoints","translatedPts","translatePoints","imageSource","stretch","contentSize","onload","event","loadedImage","measureImage","nativeSVG","measureNativeContent","templatePosition","getAvailableSize","measureNativeSvg","Port","Complex","Connect","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","isSwimlaneElements","drawRulerMarkers","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","PreventClearSelection","canPreventClearSelection","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","eventHandler","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","ejsInterop","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","diagramid","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","resetSegments","updateEventValue","addNodeToLane","hideTooltip","addNode","addConnector","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","PreventHistory","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","removeSwimLane","Delete","canDelete","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","InheritLineRouting","canEnableRouting","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","measureElemnt","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","elements","removeElementsByClass","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}